security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        jwt_neighbour:
            lexik_jwt:
                class: App\Infrastructure\Security\Jwt\JwtNeighbour

        users_in_memory: { memory: null }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/auth/login
            stateless: true
            anonymous: true

        api:
            pattern: ^/api
            stateless: true
            provider: jwt_neighbour
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        #main:
        #    anonymous: true
        #    lazy: true
        #    provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
